<!DOCTYPE html >
<html lang="ru">
<head>
	<meta charset="utf-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=9" />
	<title>Поздравляем с 8 марта!</title>
    <script src="../js/easel.js" type="text/javascript"></script>
	<script>
	    var canvas;
	    var stage;

        var bfimgsrc = [{ left: "../images/Didius 1.png", right: "../images/Didius 2.png" },
        { left: "../images/Amphitrion 1.png", right: "../images/Amphitrion 2.png" },
        { left: "../images/Catenarius 1.png", right: "../images/Catenarius 2.png" },
        { left: "../images/Cyanides 1.png", right: "../images/Cyanides 2.png" },
        { left: "../images/Cypres 1.png", right: "../images/Cypres 2.png" },
        { left: "../images/Diana 1.png", right: "../images/Diana 2.png" },
        { left: "../images/Hecuba 1.png", right: "../images/Hecuba 2.png" },
        { left: "../images/Peleides 1.png", right: "../images/Peleides 2.png" },
        { left: "../images/Polyphemus 1.png", right: "../images/Polyphemus 2.png" },
        { left: "../images/Sulkowski 1.png", right: "../images/Sulkowski 2.png"}];

        var bfsimages = [];
        var bfs = [];

        function init() {
            // create a new stage and point it at our canvas:
            canvas = document.getElementById("canvas");
            stage = new Stage(canvas);
            stage.enableMouseOver(10);

            loadButterflyis(18);

            canvas.onclick = function () {
                loadButterflyis(5);
            };

            // subscribe to Ticker
            Ticker.addListener(window);
        }
        
        function loadButterflyis(count) {
            for (var k = 0; k < count; k++) {
                var i = Math.floor(bfimgsrc.length * Math.random());

                var bfimages = {
                    left: new Image(),
                    right: new Image(),
                    loadedWings: 0,
                    onready: onButterflyImagesReady
                };

                // loading left wing
                bfimages.left.src = bfimgsrc[i].left;
                bfimages.left.onload = onWingImageLoaded;
                bfimages.left.butterfly = bfimages;

                // loading right wing
                bfimages.right.src = bfimgsrc[i].right;
                bfimages.right.onload = onWingImageLoaded;
                bfimages.right.butterfly = bfimages;
            }
        }

        function onWingImageLoaded(event) {
            var image = event.target;
            image.butterfly.loadedWings++;
            if (image.butterfly.loadedWings == 2)
                image.butterfly.onready(image.butterfly);
        }

        function onButterflyImagesReady(butterflyImgs) {
            // create a new butterfly
            var butterfly = new Butterfly(butterflyImgs.left, butterflyImgs.right);

            // add butterfly to stage
            stage.addChild(butterfly);

            // change batterfly position
            butterfly.x = canvas.width * Math.random() | 0;
            butterfly.y = canvas.height * Math.random() | 0;

            bfs.push(butterfly);
        }

        // update scene on each tick
        function tick() {
            for (var i = 0; i < bfs.length; i++) {
                var butterfly = bfs[i];
                if (butterfly.isActive()) {
                    butterfly.move();
                }
                else if (Math.random() > 0.999) {
                    butterfly.reset();
                }
            }
            stage.update();
        }

        (function (window) {

            Butterfly = function (leftImg, rightImg) {
                this.initialize();
                this.initButterfly(leftImg, rightImg);
            }

            var p = Butterfly.prototype = new Container();

            p.lWing = null;
            p.rWing = null;
            p.angle = 0;
            p.direction = 0;
            p.speed = 0;

            p.steps = 0;
            p.step = -1;

            p.initButterfly = function (leftImg, rightImg) {
                // create wings
                this.lWing = new Bitmap(leftImg);
                this.rWing = new Bitmap(rightImg);

                // change wings registration point inside container
                this.lWing.regX = this.lWing.image.width;
                this.lWing.regY = this.lWing.image.height / 2;
                this.rWing.regX = 0;
                this.rWing.regY = this.rWing.image.height / 2;

                // initial rotation
                this.lWing.rotation = this.rWing.rotation = this.angle = 360 * Math.random() | 0;
                
                // initial scale
                this.scale = this.lWing.scaleX = this.lWing.scaleY = this.rWing.scaleX = this.rWing.scaleY = 0.5 + 0.2 * Math.random();

                // assembling batterfly
                this.addChild(this.lWing);
                this.addChild(this.rWing);

                this.mouseEnabled = true;
                this.onMouseOver = function (e) { this.reset(); };
            };

            p.reset = function () {
                // animation steps
                this.step = this.steps = 40 + 60 * Math.random();
                // movement direction
                this.direction = 8 * Math.random() - 4.0;
                // movement speed
                this.speed = 5 * Math.random() + 5;
            };

            p.move = function () {
                // update rotation
                this.angle += this.direction + (5.0 * Math.random() - 2.5);
                this.lWing.rotation = this.rWing.rotation = this.angle;

                // update wings
                var wingAngle = (this.steps - this.step) / this.steps * Math.PI;
                this.lWing.scaleX = this.rWing.scaleX = this.scale * (0.4 + 0.6 * Math.abs(Math.cos(wingAngle * 4)));

                // update position
                this.x += (this.speed * Math.sin((this.angle) / 180.0 * Math.PI));
                this.y -= (this.speed * Math.cos((this.angle) / 180.0 * Math.PI));
                this.step--;
            };

            p.isActive = function () {
                return this.step >= 0;
            };

            window.Butterfly = Butterfly;
        } (window));

    </script>
</head>
<body onload="init();">
	<div class="canvasHolder"><canvas id="canvas" width="992" height="736" ></canvas></div>    
</body>
</html>
